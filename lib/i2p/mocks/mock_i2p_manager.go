// Code generated by MockGen. DO NOT EDIT.
// Source: eeptorrent/lib/i2p (interfaces: I2PManagerInterface)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_i2p_manager.go -package=mocks eeptorrent/lib/i2p I2PManagerInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	i2p "eeptorrent/lib/i2p"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockI2PManagerInterface is a mock of I2PManagerInterface interface.
type MockI2PManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockI2PManagerInterfaceMockRecorder
	isgomock struct{}
}

// MockI2PManagerInterfaceMockRecorder is the mock recorder for MockI2PManagerInterface.
type MockI2PManagerInterfaceMockRecorder struct {
	mock *MockI2PManagerInterface
}

// NewMockI2PManagerInterface creates a new mock instance.
func NewMockI2PManagerInterface(ctrl *gomock.Controller) *MockI2PManagerInterface {
	mock := &MockI2PManagerInterface{ctrl: ctrl}
	mock.recorder = &MockI2PManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockI2PManagerInterface) EXPECT() *MockI2PManagerInterfaceMockRecorder {
	return m.recorder
}

// CloseSAM mocks base method.
func (m *MockI2PManagerInterface) CloseSAM() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CloseSAM")
}

// CloseSAM indicates an expected call of CloseSAM.
func (mr *MockI2PManagerInterfaceMockRecorder) CloseSAM() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSAM", reflect.TypeOf((*MockI2PManagerInterface)(nil).CloseSAM))
}

// GetStreamSession mocks base method.
func (m *MockI2PManagerInterface) GetStreamSession() i2p.StreamSessionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStreamSession")
	ret0, _ := ret[0].(i2p.StreamSessionInterface)
	return ret0
}

// GetStreamSession indicates an expected call of GetStreamSession.
func (mr *MockI2PManagerInterfaceMockRecorder) GetStreamSession() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStreamSession", reflect.TypeOf((*MockI2PManagerInterface)(nil).GetStreamSession))
}

// InitSAM mocks base method.
func (m *MockI2PManagerInterface) InitSAM(cfg i2p.SAMConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitSAM", cfg)
	ret0, _ := ret[0].(error)
	return ret0
}

// InitSAM indicates an expected call of InitSAM.
func (mr *MockI2PManagerInterfaceMockRecorder) InitSAM(cfg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitSAM", reflect.TypeOf((*MockI2PManagerInterface)(nil).InitSAM), cfg)
}
